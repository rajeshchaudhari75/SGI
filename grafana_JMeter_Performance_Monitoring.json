{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "influxdb",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    },
    {
      "name": "VAR_SEND_INTERVAL",
      "type": "constant",
      "label": "send_interval",
      "value": "10",
      "description": ""
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "barchart",
      "name": "Bar chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.0.0"
    },
    {
      "type": "panel",
      "id": "histogram",
      "name": "Histogram",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "enable": true,
        "iconColor": "blue",
        "name": "Test Started",
        "target": {
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"events\")\r\n  |> filter(fn: (r) => r[\"_value\"] =~ /.* started/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)",
          "refId": "Anno"
        }
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "enable": true,
        "iconColor": "blue",
        "name": "Test Ended",
        "target": {
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"events\")\r\n  |> filter(fn: (r) => r[\"_value\"] =~ /.* ended/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)",
          "refId": "Anno"
        }
      }
    ]
  },
  "description": "JMeter performance testing live results dashboard",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 19950,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 138,
      "panels": [],
      "title": "Statistics",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 2,
        "x": 0,
        "y": 1
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "lastValues = from(bucket: \"jmeter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_HA2012293\" or r[\"machine\"] == \"TC_HA2012347\" or r[\"machine\"] == \"TC_HA2150032\" or r[\"machine\"] == \"TC_HA2161708\" or r[\"machine\"] == \"TC_HA2161366\" or r[\"machine\"] == \"TC_HA2161715\" or r[\"machine\"] == \"TC_HA2161711\" or r[\"machine\"] == \"TC_HA2150585\" or r[\"machine\"] == \"TC_HA2161263\" or r[\"machine\"] == \"TC_HA2322733\" or r[\"machine\"] == \"TC_HA2150594\" or r[\"machine\"] == \"TC_HA2012341\")\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\n  |> group(columns: [\"machine\"])\n  |> max()\n\nlastValues\n  |> group()\n  |> sum(column: \"_value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Active Users",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "activeUsers"
            },
            "properties": [
              {
                "id": "displayName"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 2,
        "y": 1
      },
      "id": 160,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"metric\"] == \"iris_license_consumed\")\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "iris_license_consumed",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "(.*)",
            "renamePattern": "Number of Threads"
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 4,
        "y": 1
      },
      "id": 87,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"jmeter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_HA2012293\" or r[\"machine\"] == \"TC_HA2012347\" or r[\"machine\"] == \"TC_HA2150032\" or r[\"machine\"] == \"TC_HA2161708\" or r[\"machine\"] == \"TC_HA2161366\" or r[\"machine\"] == \"TC_HA2161715\" or r[\"machine\"] == \"TC_HA2161711\" or r[\"machine\"] == \"TC_HA2150585\" or r[\"machine\"] == \"TC_HA2161263\" or r[\"machine\"] == \"TC_HA2322733\" or r[\"machine\"] == \"TC_HA2150594\" or r[\"machine\"] == \"TC_HA2012341\" )\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\n  |> top(n: 1)",
          "refId": "A"
        }
      ],
      "title": "Active Threads per Slave",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "activeUsers(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 12,
        "y": 1
      },
      "id": 88,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /^All*/)\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> cumulativeSum(columns: [\"_value\"])\n  |> last()\n  |> group()\n  |> sum(column: \"_value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Total Requests (Combined)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 15,
        "y": 1
      },
      "id": 89,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /^All_TrakCare.*/)\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> cumulativeSum(columns: [\"_value\"])\n  |> last()\n  |> group()\n  |> sum(column: \"_value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Total Requests (TrakCare)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 18,
        "y": 1
      },
      "id": 91,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_TrakCare.*/)\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> cumulativeSum(columns: [\"_value\"])\n  |> last()\n  |> group()\n  |> sum(column: \"_value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Failed Requests (TrakCare)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "color": "red",
                  "index": 0,
                  "text": "0"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 20,
        "y": 1
      },
      "id": 93,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "successPercentage = () => {\n\nallCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_TrakCare.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \nokCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"ok\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_TrakCare.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \n  return join(\n      tables:{allCount:allCount, okCount:okCount},\n      on:[\"application\"]\n    )\n    |> map(fn:(r) => ({\n             \n             percentage: r._value_okCount / r._value_allCount         \n    }))       \n}\n\nsuccessPercentage()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Success Rate % (TrakCare)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "color": "red",
                  "index": 0,
                  "text": "0"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 22,
        "y": 1
      },
      "id": 95,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "successPercentage = () => {\n\nallCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_TrakCare.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \nkoCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_TrakCare.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \n  return join(\n      tables:{allCount:allCount, koCount:koCount},\n      on:[\"application\"]\n    )\n    |> map(fn:(r) => ({\n             \n             percentage: r._value_koCount / r._value_allCount         \n    }))       \n}\n\nsuccessPercentage()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Failure Rate % (TrakCare)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "fixed"
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "activeUsers"
            },
            "properties": [
              {
                "id": "displayName"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 2,
        "y": 5
      },
      "id": 161,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"metric\"] == \"iris_license_available\")\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "iris_license_available",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "(.*)",
            "renamePattern": "Number of Threads"
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 15,
        "y": 5
      },
      "id": 90,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /^All_FHIR.*/)\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> cumulativeSum(columns: [\"_value\"])\n  |> last()\n  |> group()\n  |> sum(column: \"_value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Total Requests (FHIR)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 18,
        "y": 5
      },
      "id": 92,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_FHIR.*/)\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> cumulativeSum(columns: [\"_value\"])\n  |> last()\n  |> group()\n  |> sum(column: \"_value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Failed Requests (FHIR)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "color": "red",
                  "index": 0,
                  "text": "0"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 20,
        "y": 5
      },
      "id": 94,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "successPercentage = () => {\n\nallCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_FHIR.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \nokCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"ok\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_FHIR.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \n  return join(\n      tables:{allCount:allCount, okCount:okCount},\n      on:[\"application\"]\n    )\n    |> map(fn:(r) => ({\n             \n             percentage: r._value_okCount / r._value_allCount         \n    }))       \n}\n\nsuccessPercentage()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Success Rate % (FHIR)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "color": "red",
                  "index": 0,
                  "text": "0"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 22,
        "y": 5
      },
      "id": 96,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "successPercentage = () => {\n\nallCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_FHIR.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \nkoCount=from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_FHIR.+/)\n  |> group(columns: [\"application\"])\n  |> sum()\n  |> keep(columns: [\"_value\", \"application\"])\n  \n  return join(\n      tables:{allCount:allCount, koCount:koCount},\n      on:[\"application\"]\n    )\n    |> map(fn:(r) => ({\n             \n             percentage: r._value_koCount / r._value_allCount         \n    }))       \n}\n\nsuccessPercentage()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Failure Rate % (FHIR)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 164,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": false,
        "sizing": "auto"
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => exists r[\"responseCode\"])\n  |> group(columns: [\"responseCode\"], mode:\"by\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> count()",
          "refId": "A"
        }
      ],
      "title": "Errors By Status Codes",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*responseCode=\"([^\"]*).*",
            "renamePattern": "Error $1"
          }
        }
      ],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "Users",
            "axisPlacement": "auto",
            "fillOpacity": 67,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 151,
      "options": {
        "barRadius": 0,
        "barWidth": 1,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "max"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "normal",
        "tooltip": {
          "maxHeight": 600,
          "mode": "multi",
          "sort": "asc"
        },
        "xField": "Time",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"jmeter\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_HA2012293\" or r[\"machine\"] == \"TC_HA2012347\" or r[\"machine\"] == \"TC_HA2150032\" or r[\"machine\"] == \"TC_HA2161708\" or r[\"machine\"] == \"TC_HA2161366\" or r[\"machine\"] == \"TC_HA2161715\" or r[\"machine\"] == \"TC_HA2161711\" or r[\"machine\"] == \"TC_HA2150585\" or r[\"machine\"] == \"TC_HA2161263\" or r[\"machine\"] == \"TC_HA2322733\" or r[\"machine\"] == \"TC_HA2150594\" or r[\"machine\"] == \"TC_HA2012341\" )\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\r\n  |> aggregateWindow(every: 60s, fn: max, createEmpty: true)",
          "refId": "B"
        }
      ],
      "title": "Active Users",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*transaction=\"([^\"]*).*",
            "renamePattern": "$1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "activeUsers TC_(.*)",
            "renamePattern": "$1"
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": " TC_HA2012293",
              "operator": "+",
              "right": " TC_HA2012341"
            },
            "index": {
              "asPercentile": false
            },
            "mode": "reduceRow",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": true
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 162,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"jmeter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"metric\"] == \"iris_license_consumed\")\n  |> aggregateWindow(every: 1m, fn: last, createEmpty: true)",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "refId": "B"
        }
      ],
      "title": "iris_license_consumed",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "activeUsers\\s(\\{machine=\"[^\"]+\", name=\"[^\"]+\"\\})",
            "renamePattern": "Number of Threads"
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 34
      },
      "id": 163,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"jmeter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"metric\"] == \"iris_license_available\")\n  |> aggregateWindow(every: 1m, fn: last, createEmpty: true)",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "refId": "B"
        }
      ],
      "title": "iris_license_available",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "activeUsers\\s(\\{machine=\"[^\"]+\", name=\"[^\"]+\"\\})",
            "renamePattern": "Number of Threads"
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Response Times",
            "axisPlacement": "right",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 1800000,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Active Threads"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "palette-classic"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 2
              },
              {
                "id": "custom.axisPlacement",
                "value": "hidden"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.axisPlacement",
                "value": "left"
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "none"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 5
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 54,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Last *",
          "sortDesc": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"jmeter\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_HA2012293\" or r[\"machine\"] == \"TC_HA2012347\" or r[\"machine\"] == \"TC_HA2150032\" or r[\"machine\"] == \"TC_HA2012341\" or r[\"machine\"] == \"TC_HA2150594\" or r[\"machine\"] == \"TC_HA2161708\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\r\n  |> aggregateWindow(every: ${send_interval}s, fn: last, createEmpty: false)",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: v.bucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"jmeter\")\r\n  |> filter(fn: (r) => r._field == \"maxAT\")\r\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\r\n  |> aggregateWindow(every: ${send_interval}s, fn: last, createEmpty: true)\r\n  |> set(key: \"_field\", value: \"Active Threads\")",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "import \"regexp\"\r\nfrom(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"avg\")\r\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\r\n  |> filter(fn: (r) => r.transaction =~ regexp.compile(v: \"${site}\"))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> group(columns: [\"transaction\"], mode:\"by\")",
          "refId": "A"
        }
      ],
      "title": "Active Users Vs Response Times (Average)",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*transaction=\"([^\"]*).*",
            "renamePattern": "$1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "inter(.*)",
            "renamePattern": "Active Threads"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "_value(.*)",
            "renamePattern": "$1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "activeUsers(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Count",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 56
      },
      "id": 152,
      "options": {
        "barRadius": 0,
        "barWidth": 1,
        "fullHighlight": false,
        "groupWidth": 1,
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /recordIsLocked/)\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> aggregateWindow(every: 60s, fn: sum, createEmpty: true)",
          "refId": "A"
        }
      ],
      "title": "Records Locked",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*transaction=\"([^\"]*).*",
            "renamePattern": "$1"
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Record Locked",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "recordIsLocked"
              ],
              "reducer": "sum"
            },
            "replaceFields": true
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "stacking": {
              "group": "A",
              "mode": "none"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 64
      },
      "id": 158,
      "options": {
        "bucketSize": 60,
        "combine": false,
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Last *",
          "sortDesc": true
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /${site}+/)\n  |> filter(fn: (r) => r[\"_field\"] == \"avg\")\n  |> top(n: 17000)",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /${site}+/)\n  |> filter(fn: (r) => r[\"_field\"] == \"max\")\n  |> top(n: 17000)",
          "refId": "B"
        }
      ],
      "title": "Transactions Response Times Histogram",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*transaction=\"([^\"]*).*",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "histogram"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 74
      },
      "id": 149,
      "panels": [],
      "title": "Active Threads Vs Average Transaction Response Times (TrakCare) [${machine}]",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Response Time",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "points",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Active Threads"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "hidden"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              },
              {
                "id": "unit"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisLabel",
                "value": "Users"
              },
              {
                "id": "custom.fillOpacity",
                "value": 2
              },
              {
                "id": "custom.axisBorderShow",
                "value": false
              },
              {
                "id": "custom.pointSize",
                "value": 2
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "displayName",
                "value": "Active Threads"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "activeUsers"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisLabel",
                "value": "Users"
              },
              {
                "id": "unit"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "custom.showPoints",
                "value": "auto"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 75
      },
      "id": 98,
      "maxPerRow": 2,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": false,
          "sortBy": "Last",
          "sortDesc": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "repeat": "machine",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /^${machine}_TrakCare.+/)\n  |> filter(fn: (r) => r[\"_field\"] == \"avg\")\n  |> group(columns: [\"transaction\"], mode:\"by\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: v.bucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"jmeter\")\r\n  |> filter(fn: (r) => r._field == \"maxAT\")\r\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\r\n  |> aggregateWindow(every: ${send_interval}s, fn: last, createEmpty: true)\r\n  |> set(key: \"_field\", value: \"Active Threads\")",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"jmeter\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_${machine}\" )\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\r\n  |> aggregateWindow(every: 60s, fn: max, createEmpty: true)",
          "refId": "A"
        }
      ],
      "title": "TrakCare (Avg) - ${machine}",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*transaction=\"([^\"]*).*",
            "renamePattern": "$1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "activeUsers TC_(.*)",
            "renamePattern": "$1"
          }
        },
        {
          "disabled": true,
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "HA2012293"
            },
            "mode": "binary",
            "reduce": {
              "include": [],
              "reducer": "sum"
            },
            "replaceFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 84
      },
      "id": 144,
      "panels": [],
      "title": "Error Details",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 0,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "activeUsers"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisLabel",
                "value": "Users"
              },
              {
                "id": "custom.axisBorderShow",
                "value": true
              },
              {
                "id": "color",
                "value": {
                  "mode": "palette-classic"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 27
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Active Threads"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "line"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 85
      },
      "id": 145,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"transaction\"] == \"all\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /countError/)\n  |> set(key: \"_field\", value: \"Failed\") \n  |> top(n: 10000)",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"jmeter\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_HA2012293\" or r[\"machine\"] == \"TC_HA2012347\" or r[\"machine\"] == \"TC_HA2150032\" or r[\"machine\"] == \"TC_HA2161708\" or r[\"machine\"] == \"TC_HA2161366\" or r[\"machine\"] == \"TC_HA2161715\" or r[\"machine\"] == \"TC_HA2161711\" or r[\"machine\"] == \"TC_HA2150585\" or r[\"machine\"] == \"TC_HA2161263\" or r[\"machine\"] == \"TC_HA2322733\" or r[\"machine\"] == \"TC_HA2150594\" or r[\"machine\"] == \"TC_HA2012341\" )\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\r\n  |> aggregateWindow(every: ${send_interval}s, fn: last, createEmpty: false)\r\n  |> top(n: 1)",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": true,
          "query": "import \"regexp\"\r\n\r\nfrom(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement_name}\")\r\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\r\n  |> filter(fn: (r) => r.transaction =~ regexp.compile(v: \"${site}\"))  \r\n  //|> count()\r\n  //|> filter(fn: (r) => r[\"_field\"] == \"countError\")\r\n",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: v.bucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"jmeter\")\r\n  |> filter(fn: (r) => r._field == \"maxAT\")\r\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\r\n  |> aggregateWindow(every: ${send_interval}s, fn: last, createEmpty: true)\r\n  |> set(key: \"_field\", value: \"Active Threads\")",
          "refId": "D"
        }
      ],
      "title": "Failed Requests Over Time",
      "transformations": [
        {
          "disabled": true,
          "id": "renameByRegex",
          "options": {
            "regex": "(.*){.*}",
            "renamePattern": "$1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "activeUsers(.*)",
            "renamePattern": "$1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*transaction=\"([^\"]*).*",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 95
      },
      "id": 43,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Time"
          }
        ]
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"responseMessage\"] != \"\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> top(n: 5000)",
          "refId": "A"
        }
      ],
      "title": "Error Details",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "mode": "columns"
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "application": true,
              "count": true
            },
            "indexByName": {
              "Time": 0,
              "application": 3,
              "count": 2,
              "responseCode": 4,
              "responseMessage": 5,
              "transaction": 1
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 104
      },
      "id": 148,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "center",
                "cellOptions": {
                  "type": "color-text"
                },
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "# Samples"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "none"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ErrorRate"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percentunit"
                  },
                  {
                    "id": "decimals",
                    "value": 2
                  },
                  {
                    "id": "noValue",
                    "value": "-"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "transaction"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "auto"
                  },
                  {
                    "id": "displayName",
                    "value": "Transactions"
                  },
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "gradient",
                      "type": "color-background"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Transactions"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 504
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "# Fail"
                },
                "properties": [
                  {
                    "id": "unit"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "# Pass"
                },
                "properties": [
                  {
                    "id": "unit"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 19,
            "w": 24,
            "x": 0,
            "y": 87
          },
          "id": 147,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": false,
              "fields": [
                "# Samples",
                "# Pass",
                "# Fail"
              ],
              "reducer": [
                "sum"
              ],
              "show": true
            },
            "frameIndex": 12,
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "Transactions"
              }
            ]
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "import \"regexp\"\r\nfrom(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"${measurement_name}\")\r\n  |> filter(fn: (r) => r._field == \"count\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\r\n  |> filter(fn: (r) => r[\"transaction\"] != \"all\")\r\n  |> filter(fn: (r) => r.transaction =~ regexp.compile(v: \"${site}\"))\r\n  |> keep(columns: [\"_value\", \"transaction\"])\r\n  |> group(columns: [\"transaction\"])\r\n  |> sum()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"# Samples\"})",
              "refId": "G"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "import \"regexp\"\nfrom(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement_name}\")\n  |> filter(fn: (r) => r._field == \"avg\")\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\n  |> filter(fn: (r) => r.transaction =~ regexp.compile(v: \"${site}\"))\n  |> keep(columns: [\"_value\", \"transaction\"])\n  |> group(columns: [\"transaction\"])\n  |> last()\n  |> group()\n  |> rename(columns: {\"_value\": \"Avg\"})",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "import \"regexp\"\r\nfrom(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"${measurement_name}\")\r\n  |> filter(fn: (r) => r._field == \"min\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\r\n  |> filter(fn: (r) => r.transaction =~ regexp.compile(v: \"${site}\"))\r\n  |> keep(columns: [\"_value\", \"transaction\"])\r\n  |> group(columns: [\"transaction\"])\r\n  |> min()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Min\"})",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "import \"regexp\"\r\nfrom(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"${measurement_name}\")\r\n  |> filter(fn: (r) => r._field == \"max\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\r\n  |> filter(fn: (r) => r.transaction =~ regexp.compile(v: \"${site}\"))\r\n  |> keep(columns: [\"_value\", \"transaction\"])\r\n  |> group(columns: [\"transaction\"])\r\n  |> max()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Max\"})",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: v.bucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"jmeter\")\r\n  |> filter(fn: (r) => r._field == \"count\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"ok\")\r\n  |> filter(fn: (r) => r[\"transaction\"] =~ /^${site}/)\r\n  |> keep(columns: [\"_value\", \"transaction\"])\r\n  |> group(columns: [\"transaction\"])\r\n  |> sum()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"# Pass\"})",
              "refId": "E"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: v.bucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"jmeter\")\r\n  |> filter(fn: (r) => r._field == \"count\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\r\n  |> filter(fn: (r) => r[\"transaction\"] =~ /^${site}/)\r\n  |> keep(columns: [\"_value\", \"transaction\"])\r\n  |> group(columns: [\"transaction\"])\r\n  |> sum()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"# Fail\"})",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "import \"regexp\"\r\ncountAll = from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"${measurement_name}\")\r\n  |> filter(fn: (r) => r._field == \"count\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"all\")\r\n  |> filter(fn: (r) => r.transaction =~ regexp.compile(v: \"${site}\"))\r\n  |> group(columns: [\"transaction\"])\r\n  |> sum()\r\n  |> group()\r\n  |> toFloat()\r\n  |> keep(columns: [\"_value\", \"transaction\"])\r\n\r\ncountError = from(bucket: v.bucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"jmeter\")\r\n  |> filter(fn: (r) => r._field == \"count\")\r\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\r\n  |> filter(fn: (r) => r[\"transaction\"] != \"all\")\r\n  |> group(columns: [\"transaction\"])\r\n  |> sum()\r\n  |> group()\r\n  |> toFloat()\r\n  |> keep(columns: [\"_value\", \"transaction\"])\r\n\r\njoin(\r\n      tables:{countAll:countAll, countError:countError},\r\n      on:[\"transaction\"]\r\n    )\r\n    |> map(fn:(r) => ({\r\n             transaction: r.transaction,\r\n             ErrorRate: r._value_countError / r._value_countAll         \r\n}))   ",
              "refId": "H"
            }
          ],
          "title": "Metrics",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            }
          ],
          "type": "table"
        }
      ],
      "title": "Response Times Metrics",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 105
      },
      "id": 156,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": true,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "Users",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 49,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 2,
                "pointSize": 7,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "activeUsers"
                },
                "properties": [
                  {
                    "id": "displayName"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 88
          },
          "id": 146,
          "options": {
            "legend": {
              "calcs": [
                "max"
              ],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": true,
              "query": "from(bucket: \"jmeter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_HA2012293\" or r[\"machine\"] == \"TC_HA2012347\" or r[\"machine\"] == \"TC_HA2150032\"  or r[\"machine\"] == \"TC_HA2012341\" or r[\"machine\"] == \"TC_HA2150594\" or r[\"machine\"] == \"TC_HA2161708\")\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\n  |> aggregateWindow(every: ${send_interval}s, fn: last, createEmpty: false)",
              "refId": "A"
            }
          ],
          "title": "Active Users",
          "transformations": [
            {
              "id": "renameByRegex",
              "options": {
                "regex": "(.*)",
                "renamePattern": "Number of Threads"
              }
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": true,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "Count",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 96
          },
          "id": 159,
          "options": {
            "barRadius": 0,
            "barWidth": 1,
            "fullHighlight": false,
            "groupWidth": 1,
            "legend": {
              "calcs": [
                "lastNotNull",
                "mean"
              ],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "normal",
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 100
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"ok\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_TrakCare_.+05_SelectPatientDemographic/)\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> aggregateWindow(every: 60s, fn: sum, createEmpty: true)",
              "refId": "A"
            }
          ],
          "title": "Patients Demographic Screen per minute (Passed)",
          "transformations": [
            {
              "id": "renameByRegex",
              "options": {
                "regex": ".*transaction=\"([^\"]*).*",
                "renamePattern": "$1"
              }
            },
            {
              "id": "calculateField",
              "options": {
                "mode": "reduceRow",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": true
              }
            }
          ],
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "dark-red",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": true,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "Count",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 104
          },
          "id": 153,
          "options": {
            "barRadius": 0,
            "barWidth": 1,
            "fullHighlight": false,
            "groupWidth": 1,
            "legend": {
              "calcs": [
                "lastNotNull",
                "mean"
              ],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "normal",
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 100
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": true,
              "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> filter(fn: (r) => r[\"application\"] == \"${application}\")\n  |> filter(fn: (r) => r[\"statut\"] == \"ko\")\n  |> filter(fn: (r) => r[\"transaction\"] =~ /All_TrakCare_.+05_SelectPatientDemographic/)\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> aggregateWindow(every: 60s, fn: sum, createEmpty: true)",
              "refId": "B"
            }
          ],
          "title": "Patients Demographic Screen per minute (Failed)",
          "transformations": [
            {
              "id": "renameByRegex",
              "options": {
                "regex": ".*transaction=\"([^\"]*).*",
                "renamePattern": "$1"
              }
            },
            {
              "id": "calculateField",
              "options": {
                "mode": "reduceRow",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": true
              }
            }
          ],
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": true,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisGridShow": true,
                "axisLabel": "Users",
                "axisPlacement": "auto",
                "fillOpacity": 67,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 0,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 112
          },
          "id": 157,
          "options": {
            "barRadius": 0,
            "barWidth": 1,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [
                "max"
              ],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "auto",
            "showValue": "always",
            "stacking": "normal",
            "tooltip": {
              "maxHeight": 600,
              "mode": "multi",
              "sort": "asc"
            },
            "xField": "Time",
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 100
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: \"jmeter\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"machine\"] == \"TC_HA2012293\" or r[\"machine\"] == \"TC_HA2012347\" or r[\"machine\"] == \"TC_HA2150032\" or r[\"machine\"] == \"TC_HA2161708\" or r[\"machine\"] == \"TC_HA2161366\" or r[\"machine\"] == \"TC_HA2161715\" or r[\"machine\"] == \"TC_HA2161711\" or r[\"machine\"] == \"TC_HA2150585\" or r[\"machine\"] == \"TC_HA2161263\" or r[\"machine\"] == \"TC_HA2322733\" or r[\"machine\"] == \"TC_HA2150594\" or r[\"machine\"] == \"TC_HA2012341\" )\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeUsers\")\r\n  |> aggregateWindow(every: 60s, fn: max, createEmpty: true)",
              "refId": "B"
            }
          ],
          "title": "Active Users",
          "transformations": [
            {
              "id": "renameByRegex",
              "options": {
                "regex": ".*transaction=\"([^\"]*).*",
                "renamePattern": "$1"
              }
            },
            {
              "id": "renameByRegex",
              "options": {
                "regex": "activeUsers TC_(.*)",
                "renamePattern": "$1"
              }
            },
            {
              "id": "calculateField",
              "options": {
                "binary": {
                  "left": " TC_HA2012293",
                  "operator": "+",
                  "right": " TC_HA2012341"
                },
                "index": {
                  "asPercentile": false
                },
                "mode": "unary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": false
              }
            }
          ],
          "type": "barchart"
        }
      ],
      "title": "Disabled",
      "type": "row"
    }
  ],
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "jmeter",
          "value": "jmeter"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "bucket",
        "options": [
          {
            "selected": true,
            "text": "jmeter",
            "value": "jmeter"
          },
          {
            "selected": false,
            "text": "telegraf",
            "value": "telegraf"
          }
        ],
        "query": "jmeter,telegraf",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": " from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement_name}\")\r\n  |> group()\r\n  |> distinct(column: \"application\") \r\n  |> drop(columns: [\"_start\", \"_stop\"])",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "application",
        "options": [],
        "query": " from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement_name}\")\r\n  |> group()\r\n  |> distinct(column: \"application\") \r\n  |> drop(columns: [\"_start\", \"_stop\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"influxdata/influxdb/v1\"\nv1.measurements(bucket: v.bucket)",
        "hide": 0,
        "includeAll": false,
        "label": "Measurement name",
        "multi": false,
        "name": "measurement_name",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\nv1.measurements(bucket: v.bucket)",
        "refresh": 2,
        "regex": "jmeter",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "hide": 2,
        "name": "send_interval",
        "query": "${VAR_SEND_INTERVAL}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_SEND_INTERVAL}",
          "text": "${VAR_SEND_INTERVAL}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_SEND_INTERVAL}",
            "text": "${VAR_SEND_INTERVAL}",
            "selected": false
          }
        ]
      },
      {
        "current": {
          "selected": false,
          "text": "All_",
          "value": "All_"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Site",
        "multi": false,
        "name": "site",
        "options": [
          {
            "selected": true,
            "text": "All_",
            "value": "All_"
          },
          {
            "selected": false,
            "text": "FHIR",
            "value": "FHIR"
          },
          {
            "selected": false,
            "text": "OFF",
            "value": "OFF"
          },
          {
            "selected": false,
            "text": "ACH",
            "value": "ACH"
          },
          {
            "selected": false,
            "text": "GCC",
            "value": "GCC"
          },
          {
            "selected": false,
            "text": "SSH",
            "value": "SSH"
          },
          {
            "selected": false,
            "text": "HA2012293",
            "value": "HA2012293"
          },
          {
            "selected": false,
            "text": "HA2150032",
            "value": "HA2150032"
          },
          {
            "selected": false,
            "text": "HA2161708",
            "value": "HA2161708"
          },
          {
            "selected": false,
            "text": "HA2161366",
            "value": "HA2161366"
          },
          {
            "selected": false,
            "text": "HA2161715",
            "value": "HA2161715"
          },
          {
            "selected": false,
            "text": "HA2161711",
            "value": "HA2161711"
          },
          {
            "selected": false,
            "text": "HA2150585",
            "value": "HA2150585"
          },
          {
            "selected": false,
            "text": "HA2161263",
            "value": "HA2161263"
          },
          {
            "selected": false,
            "text": "HA2322733",
            "value": "HA2322733"
          },
          {
            "selected": false,
            "text": "HA2150594",
            "value": "HA2150594"
          },
          {
            "selected": false,
            "text": "HA2012341",
            "value": "HA2012341"
          },
          {
            "selected": false,
            "text": "HA2012347",
            "value": "HA2012347"
          },
          {
            "selected": false,
            "text": "TrakCare",
            "value": "TrakCare"
          },
          {
            "selected": false,
            "text": "",
            "value": ""
          },
          {
            "selected": false,
            "text": "",
            "value": ""
          },
          {
            "selected": false,
            "text": "ping",
            "value": "ping"
          }
        ],
        "query": "All_,FHIR,OFF,ACH,GCC,SSH,HA2012293,HA2150032,HA2161708,HA2161366,HA2161715,HA2161711,HA2150585,HA2161263,HA2322733,HA2150594,HA2012341,HA2012347,TrakCare, , ,ping",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "HA2012293"
          ],
          "value": [
            "HA2012293"
          ]
        },
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "machine",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": true,
            "text": "HA2012293",
            "value": "HA2012293"
          },
          {
            "selected": false,
            "text": "HA2150032",
            "value": "HA2150032"
          },
          {
            "selected": false,
            "text": "HA2161708",
            "value": "HA2161708"
          },
          {
            "selected": false,
            "text": "HA2161366",
            "value": "HA2161366"
          },
          {
            "selected": false,
            "text": "HA2161715",
            "value": "HA2161715"
          },
          {
            "selected": false,
            "text": "HA2161711",
            "value": "HA2161711"
          },
          {
            "selected": false,
            "text": "HA2150585",
            "value": "HA2150585"
          },
          {
            "selected": false,
            "text": "HA2161263",
            "value": "HA2161263"
          },
          {
            "selected": false,
            "text": "HA2322733",
            "value": "HA2322733"
          },
          {
            "selected": false,
            "text": "HA2150594",
            "value": "HA2150594"
          },
          {
            "selected": false,
            "text": "HA2012341",
            "value": "HA2012341"
          },
          {
            "selected": false,
            "text": "HA2012347",
            "value": "HA2012347"
          }
        ],
        "query": "HA2012293,HA2150032,HA2161708,HA2161366,HA2161715,HA2161711,HA2150585,HA2161263,HA2322733,HA2150594,HA2012341,HA2012347",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "2024-08-15T22:04:47.893Z",
    "to": "2024-08-16T01:31:23.393Z"
  },
  "timeRangeUpdatedDuringEditOrView": false,
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "15s",
      "30s",
      "1m"
    ]
  },
  "timezone": "",
  "title": "JMeter_Performance_Testing",
  "uid": "cdpfhd7lyojr4d",
  "version": 82,
  "weekStart": ""
}